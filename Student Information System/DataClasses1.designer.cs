#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Student_Information_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Student Information")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmergencyContact(EmergencyContact instance);
    partial void UpdateEmergencyContact(EmergencyContact instance);
    partial void DeleteEmergencyContact(EmergencyContact instance);
    partial void InsertParentDetails(ParentDetails instance);
    partial void UpdateParentDetails(ParentDetails instance);
    partial void DeleteParentDetails(ParentDetails instance);
    partial void InsertSiblingDetails(SiblingDetails instance);
    partial void UpdateSiblingDetails(SiblingDetails instance);
    partial void DeleteSiblingDetails(SiblingDetails instance);
    partial void InsertStudentDetails(StudentDetails instance);
    partial void UpdateStudentDetails(StudentDetails instance);
    partial void DeleteStudentDetails(StudentDetails instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Student_Information_System.Properties.Settings.Default.Student_InformationConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountDetail> AccountDetails
		{
			get
			{
				return this.GetTable<AccountDetail>();
			}
		}
		
		public System.Data.Linq.Table<EmergencyContact> EmergencyContacts
		{
			get
			{
				return this.GetTable<EmergencyContact>();
			}
		}
		
		public System.Data.Linq.Table<ParentDetails> ParentDetails
		{
			get
			{
				return this.GetTable<ParentDetails>();
			}
		}
		
		public System.Data.Linq.Table<SiblingDetails> SiblingDetails
		{
			get
			{
				return this.GetTable<SiblingDetails>();
			}
		}
		
		public System.Data.Linq.Table<StudentDetails> StudentDetails
		{
			get
			{
				return this.GetTable<StudentDetails>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountDetails")]
	public partial class AccountDetail
	{
		
		private string _Username;
		
		private string _Password;
		
		public AccountDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmergencyContact")]
	public partial class EmergencyContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private string _GuardianName;
		
		private string _GuardianAddress;
		
		private string _Relationship;
		
		private string _EmergencyContactNumber;
		
		private int _StudentID;
		
		private EntityRef<StudentDetails> _StudentDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnGuardianNameChanging(string value);
    partial void OnGuardianNameChanged();
    partial void OnGuardianAddressChanging(string value);
    partial void OnGuardianAddressChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnEmergencyContactNumberChanging(string value);
    partial void OnEmergencyContactNumberChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    #endregion
		
		public EmergencyContact()
		{
			this._StudentDetails = default(EntityRef<StudentDetails>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GuardianName
		{
			get
			{
				return this._GuardianName;
			}
			set
			{
				if ((this._GuardianName != value))
				{
					this.OnGuardianNameChanging(value);
					this.SendPropertyChanging();
					this._GuardianName = value;
					this.SendPropertyChanged("GuardianName");
					this.OnGuardianNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GuardianAddress
		{
			get
			{
				return this._GuardianAddress;
			}
			set
			{
				if ((this._GuardianAddress != value))
				{
					this.OnGuardianAddressChanging(value);
					this.SendPropertyChanging();
					this._GuardianAddress = value;
					this.SendPropertyChanged("GuardianAddress");
					this.OnGuardianAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string EmergencyContactNumber
		{
			get
			{
				return this._EmergencyContactNumber;
			}
			set
			{
				if ((this._EmergencyContactNumber != value))
				{
					this.OnEmergencyContactNumberChanging(value);
					this.SendPropertyChanging();
					this._EmergencyContactNumber = value;
					this.SendPropertyChanged("EmergencyContactNumber");
					this.OnEmergencyContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._StudentDetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_EmergencyContact", Storage="_StudentDetails", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
		public StudentDetails StudentDetails
		{
			get
			{
				return this._StudentDetails.Entity;
			}
			set
			{
				StudentDetails previousValue = this._StudentDetails.Entity;
				if (((previousValue != value) 
							|| (this._StudentDetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDetails.Entity = null;
						previousValue.EmergencyContacts.Remove(this);
					}
					this._StudentDetails.Entity = value;
					if ((value != null))
					{
						value.EmergencyContacts.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("StudentDetails");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParentDetails")]
	public partial class ParentDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParentID;
		
		private string _MotherName;
		
		private string _MotherOccupation;
		
		private string _MotherContactNumber;
		
		private string _FatherName;
		
		private string _FatherOccupation;
		
		private string _FatherContactNumber;
		
		private int _StudentID;
		
		private EntityRef<StudentDetails> _StudentDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnMotherNameChanging(string value);
    partial void OnMotherNameChanged();
    partial void OnMotherOccupationChanging(string value);
    partial void OnMotherOccupationChanged();
    partial void OnMotherContactNumberChanging(string value);
    partial void OnMotherContactNumberChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnFatherOccupationChanging(string value);
    partial void OnFatherOccupationChanged();
    partial void OnFatherContactNumberChanging(string value);
    partial void OnFatherContactNumberChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    #endregion
		
		public ParentDetails()
		{
			this._StudentDetails = default(EntityRef<StudentDetails>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MotherName
		{
			get
			{
				return this._MotherName;
			}
			set
			{
				if ((this._MotherName != value))
				{
					this.OnMotherNameChanging(value);
					this.SendPropertyChanging();
					this._MotherName = value;
					this.SendPropertyChanged("MotherName");
					this.OnMotherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherOccupation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MotherOccupation
		{
			get
			{
				return this._MotherOccupation;
			}
			set
			{
				if ((this._MotherOccupation != value))
				{
					this.OnMotherOccupationChanging(value);
					this.SendPropertyChanging();
					this._MotherOccupation = value;
					this.SendPropertyChanged("MotherOccupation");
					this.OnMotherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherContactNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string MotherContactNumber
		{
			get
			{
				return this._MotherContactNumber;
			}
			set
			{
				if ((this._MotherContactNumber != value))
				{
					this.OnMotherContactNumberChanging(value);
					this.SendPropertyChanging();
					this._MotherContactNumber = value;
					this.SendPropertyChanged("MotherContactNumber");
					this.OnMotherContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherOccupation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FatherOccupation
		{
			get
			{
				return this._FatherOccupation;
			}
			set
			{
				if ((this._FatherOccupation != value))
				{
					this.OnFatherOccupationChanging(value);
					this.SendPropertyChanging();
					this._FatherOccupation = value;
					this.SendPropertyChanged("FatherOccupation");
					this.OnFatherOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherContactNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string FatherContactNumber
		{
			get
			{
				return this._FatherContactNumber;
			}
			set
			{
				if ((this._FatherContactNumber != value))
				{
					this.OnFatherContactNumberChanging(value);
					this.SendPropertyChanging();
					this._FatherContactNumber = value;
					this.SendPropertyChanged("FatherContactNumber");
					this.OnFatherContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._StudentDetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_ParentDetail", Storage="_StudentDetails", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
		public StudentDetails StudentDetails
		{
			get
			{
				return this._StudentDetails.Entity;
			}
			set
			{
				StudentDetails previousValue = this._StudentDetails.Entity;
				if (((previousValue != value) 
							|| (this._StudentDetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDetails.Entity = null;
						previousValue.ParentDetails.Remove(this);
					}
					this._StudentDetails.Entity = value;
					if ((value != null))
					{
						value.ParentDetails.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("StudentDetails");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiblingDetails")]
	public partial class SiblingDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiblingID;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private int _Age;
		
		private string _Gender;
		
		private int _StudentID;
		
		private EntityRef<StudentDetails> _StudentDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiblingIDChanging(int value);
    partial void OnSiblingIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    #endregion
		
		public SiblingDetails()
		{
			this._StudentDetails = default(EntityRef<StudentDetails>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiblingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SiblingID
		{
			get
			{
				return this._SiblingID;
			}
			set
			{
				if ((this._SiblingID != value))
				{
					this.OnSiblingIDChanging(value);
					this.SendPropertyChanging();
					this._SiblingID = value;
					this.SendPropertyChanged("SiblingID");
					this.OnSiblingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._StudentDetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_SiblingDetail", Storage="_StudentDetails", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
		public StudentDetails StudentDetails
		{
			get
			{
				return this._StudentDetails.Entity;
			}
			set
			{
				StudentDetails previousValue = this._StudentDetails.Entity;
				if (((previousValue != value) 
							|| (this._StudentDetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentDetails.Entity = null;
						previousValue.SiblingDetails.Remove(this);
					}
					this._StudentDetails.Entity = value;
					if ((value != null))
					{
						value.SiblingDetails.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("StudentDetails");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentDetails")]
	public partial class StudentDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentID;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Gender;
		
		private System.DateTime _Birthday;
		
		private int _Age;
		
		private string _HomeAddress;
		
		private string _ContactNumber;
		
		private EntitySet<EmergencyContact> _EmergencyContacts;
		
		private EntitySet<ParentDetails> _ParentDetails;
		
		private EntitySet<SiblingDetails> _SiblingDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    #endregion
		
		public StudentDetails()
		{
			this._EmergencyContacts = new EntitySet<EmergencyContact>(new Action<EmergencyContact>(this.attach_EmergencyContacts), new Action<EmergencyContact>(this.detach_EmergencyContacts));
			this._ParentDetails = new EntitySet<ParentDetails>(new Action<ParentDetails>(this.attach_ParentDetails), new Action<ParentDetails>(this.detach_ParentDetails));
			this._SiblingDetails = new EntitySet<SiblingDetails>(new Action<SiblingDetails>(this.attach_SiblingDetails), new Action<SiblingDetails>(this.detach_SiblingDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date NOT NULL")]
		public System.DateTime Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_EmergencyContact", Storage="_EmergencyContacts", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<EmergencyContact> EmergencyContacts
		{
			get
			{
				return this._EmergencyContacts;
			}
			set
			{
				this._EmergencyContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_ParentDetail", Storage="_ParentDetails", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<ParentDetails> ParentDetails
		{
			get
			{
				return this._ParentDetails;
			}
			set
			{
				this._ParentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentDetail_SiblingDetail", Storage="_SiblingDetails", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<SiblingDetails> SiblingDetails
		{
			get
			{
				return this._SiblingDetails;
			}
			set
			{
				this._SiblingDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmergencyContacts(EmergencyContact entity)
		{
			this.SendPropertyChanging();
			entity.StudentDetails = this;
		}
		
		private void detach_EmergencyContacts(EmergencyContact entity)
		{
			this.SendPropertyChanging();
			entity.StudentDetails = null;
		}
		
		private void attach_ParentDetails(ParentDetails entity)
		{
			this.SendPropertyChanging();
			entity.StudentDetails = this;
		}
		
		private void detach_ParentDetails(ParentDetails entity)
		{
			this.SendPropertyChanging();
			entity.StudentDetails = null;
		}
		
		private void attach_SiblingDetails(SiblingDetails entity)
		{
			this.SendPropertyChanging();
			entity.StudentDetails = this;
		}
		
		private void detach_SiblingDetails(SiblingDetails entity)
		{
			this.SendPropertyChanging();
			entity.StudentDetails = null;
		}
	}
}
#pragma warning restore 1591
